{
	"info": {
		"_postman_id": "bd064f40-5799-46b2-ae6e-b9c71b654280",
		"name": "Fin-Sights",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26811368"
	},
	"item": [
		{
			"name": "predict",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Setting dynamic input values for the request payload\r",
							"pm.environment.set(\"income\", Math.floor(Math.random() * 10000000));\r",
							"pm.environment.set(\"age\", Math.floor(Math.random() * 80));\r",
							"pm.environment.set(\"experience\", Math.floor(Math.random() * 40));\r",
							"pm.environment.set(\"currentJobYears\", Math.floor(Math.random() * 20));\r",
							"pm.environment.set(\"currentHouseYears\", Math.floor(Math.random() * 20));\r",
							"\r",
							"// Prepare payload\r",
							"const requestBody = {\r",
							"    \"Income\": pm.environment.get(\"income\"),\r",
							"    \"Age\": pm.environment.get(\"age\"),\r",
							"    \"Experience\": pm.environment.get(\"experience\"),\r",
							"    \"CURRENT_JOB_YRS\": pm.environment.get(\"currentJobYears\"),\r",
							"    \"CURRENT_HOUSE_YRS\": pm.environment.get(\"currentHouseYears\"),\r",
							"    \"Married_Single\": \"single\",\r",
							"    \"House_Ownership\": \"rented\",\r",
							"    \"Car_Ownership\": \"no\",\r",
							"    \"Profession\": \"Engineer\",\r",
							"    \"CITY\": \"Mumbai\",\r",
							"    \"STATE\": \"Maharashtra\"\r",
							"};\r",
							"\r",
							"// Set the request payload dynamically\r",
							"pm.request.body.raw = JSON.stringify(requestBody);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Prediction field exists in the response\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.prediction).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Prediction is a non-empty string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.prediction).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Prediction should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Prediction field is not null or undefined\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.prediction).to.exist.and.not.to.be.null.and.not.to.be.undefined;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Prediction field is of type string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"\r",
							"  pm.expect(responseData.prediction).to.be.a('string');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Error handling for unexpected response structure\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.have.property('prediction').that.is.a('string');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Error handling for invalid input data\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.prediction).to.exist.and.to.be.a('string');\r",
							"});\r",
							"\r",
							"\r",
							"// Check if the request was successful\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Validate that the response contains a 'prediction' field\r",
							"pm.test(\"Response has prediction\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('prediction');\r",
							"});\r",
							"\r",
							"// Verify if the prediction value is either 'YES' or 'NO'\r",
							"pm.test(\"Prediction is either YES or NO\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prediction).to.be.oneOf([\"YES\", \"NO\"]);\r",
							"});\r",
							"\r",
							"// Log the response prediction for debugging purposes\r",
							"const jsonData = pm.response.json();\r",
							"console.log(\"Prediction:\", jsonData.prediction);\r",
							"\r",
							"// Store prediction in an environment variable for further use\r",
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"predictionResult\", jsonData.prediction);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Income\": 1215004,\r\n    \"Age\": 25,\r\n    \"Experience\": 5,\r\n    \"CURRENT_JOB_YRS\": 5,\r\n    \"CURRENT_HOUSE_YRS\": 10,\r\n    \"Married_Single\": \"single\",\r\n    \"House_Ownership\": \"rented\",\r\n    \"Car_Ownership\": \"no\",\r\n    \"Profession\": \"Firefighter\",\r\n    \"CITY\": \"Jalna\",\r\n    \"STATE\": \"Maharashtra\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/predict",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"predict"
					]
				}
			},
			"response": [
				{
					"name": "YesResponse",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"Income\": 1944421,\r\n    \"Age\": 49,\r\n    \"Experience\": 9,\r\n    \"CURRENT_JOB_YRS\": 3,\r\n    \"CURRENT_HOUSE_YRS\": 12,\r\n    \"Married_Single\": \"married\",\r\n    \"House_Ownership\": \"rented\",\r\n    \"Car_Ownership\": \"yes\",\r\n    \"Profession\": \"Analyst\",\r\n    \"CITY\": \"Latur\",\r\n    \"STATE\": \"Maharashtra\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/predict",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"predict"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Mon, 14 Oct 2024 04:12:58 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "20"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"prediction\": \"YES\"\n}"
				},
				{
					"name": "NoResponse",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Income\": 1215004,\r\n    \"Age\": 25,\r\n    \"Experience\": 5,\r\n    \"CURRENT_JOB_YRS\": 5,\r\n    \"CURRENT_HOUSE_YRS\": 10,\r\n    \"Married_Single\": \"single\",\r\n    \"House_Ownership\": \"rented\",\r\n    \"Car_Ownership\": \"no\",\r\n    \"Profession\": \"Firefighter\",\r\n    \"CITY\": \"Jalna\",\r\n    \"STATE\": \"Maharashtra\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/predict",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"predict"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Mon, 14 Oct 2024 04:13:27 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "19"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"prediction\": \"NO\"\n}"
				}
			]
		}
	]
}